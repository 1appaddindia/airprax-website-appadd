// convertSpecialCharacters.js
export function convertSpecialCharacters(str) {
    const charMap = {
        '&': 'and',
        '<': 'less_than',
        '>': 'greater_than',
        '"': 'double_quote',
        "'": 'single_quote',
        '/': 'slash',
        '\\': 'backslash',
        '\n': 'newline',
        '\r': 'carriage_return',
        '\t': 'tab',
        '+': 'plus',
        '=': 'equals',
        '*': 'asterisk',
        '%': 'percent',
        '$': 'dollar',
        '@': 'at',
        '!': 'exclamation',
        '#': 'hash',
        '^': 'caret',
        '(': 'open_parenthesis',
        ')': 'close_parenthesis',
        '-': 'dash',
        '_': 'underscore',
        '{': 'open_brace',
        '}': 'close_brace',
        '[': 'open_bracket',
        ']': 'close_bracket',
        '|': 'pipe',
        ':': 'colon',
        ';': 'semicolon',
        ',': 'comma',
        '.': 'dot',
        '?': 'question_mark',
        '~': 'tilde',
        '`': 'backtick',
        ' ': 'space',
        '\u00A9': 'copyright',
        '\u00AE': 'registered_trademark',
        '\u20AC': 'euro',
        '\u00A3': 'pound',
        '\u00A5': 'yen',
        '\u2022': 'bullet',
        '\u2014': 'em_dash',
        '\u2013': 'en_dash',
        '\u2026': 'ellipsis',
        '\u201C': 'left_double_quote',
        '\u201D': 'right_double_quote',
        '\u2018': 'left_single_quote',
        '\u2019': 'right_single_quote'
    };

    const specialChars = new RegExp(Object.keys(charMap).map(char => '\\' + char).join('|'), 'g');
    return str.replace(specialChars, (char) => charMap[char] || char);
}
